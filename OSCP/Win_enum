RECON TIPS

 1. If you got creds try them an all boxes.
 2. Do local enum every time you get creds as it can show additional path/files.
 3. During external(blackbox) enum try to find hidden files/directories. Try different extentions based on web technology.
 4. During external(blackbox) enum try to find hidden subdomains as well.
 5. On different services try default creds. Example: FTP anonymous/anonymous or guest/guest. For MSSql sa/blank password.
------------------------------

RECON Tools 

# https://github.com/Tib3rius/AutoRecon
autorecon

# enum4linux-ng  https://github.com/cddmp/enum4linux-ng
enum4linux-ng.py ip

-----------------------------

NMAP

# Alive hosts
nmap -sn 10.0.0.0/24	

# scan the 1024 most common ports, run OS detection, run default nmap scripts
nmap -A -oA nmap <targetip>	

# Scan more deeply, scan all 65535 ports on $targetip with a full connect scan
nmap -v -sT <targetip> -p- 

# more options
nmap -sV -sC -v -A <targetip> -p- 
nmap -sT -sV -A -O -v -p 1–65535 <targetip> 

# my preference
nmap -sV -sC -v -oA output <targetip>
nmap -p- -v <targetip>

## Nmap script to scan for vulnerable SMB servers - WARNING: unsafe=1 may cause knockover
```
nmap -v -p 445 --script=smb-check-vulns --script-args=unsafe=1 192.168.1.X	
```
## Nmap script to scan for vulnerable SMB servers – WARNING: unsafe=1 may cause knockover
```
nmap –script smb-check-vulns.nse –script-args=unsafe=1 -p445 [host]      

nmap -sU -sS --script=smb-enum-users -p U:137,T:139 192.168.11.200-254
nmap -T4 -v -oA shares --script smb-enum-shares --script-args smbuser=username,smbpass=password -p445 192.168.1.0/24
nmap -p- -T5 ip -v
nmap -p22,80,443 -A ip -v
nmap -v -sC -sV -A -oN output.txt 172.21.0.185
nmap -sV --script "ldap* and not brute"  ip
nmap --script krb-enum-users 

# SMB nmap Scripting Engine Vulnerability scan
nmap -p 139,445 10.11.1.115 -vv --script=smb-vuln-cve2009-3103.nse,smb-vuln-ms06-025.nse,smb-vuln-ms07-029.nse,smb-vuln-ms08-067.nse,smb-vuln-ms10-054.nse,smb-vuln-ms10-061.nse,smb-vuln-ms17-010.nse
------------------------

SMB

## Enumerate users from SMB
```
python /usr/share/doc/python-impacket-doc/examples/samrdump.py 192.168.XXX.XXX
```
## RID cycle SMB / enumerate users from SMB
```
ridenum.py 192.168.XXX.XXX 500 50000 dict.txt

Port 139 and 445- SMB/Samba shares
Samba is a service that enables the user to share files with other machines
works the same as a command line FTP client, may browse files without even having credentials

# Share List:
smbclient --list <targetip>
smbclient -L <targetip>
smbclient -N //172.21.0.185
smbclient -U '' -N -L //172.21.0.185 - you can ommite //    you need // if you mount it
smbclient //172.21.0.185/sharename -c 'recurse;ls'
smbclient //172.21.0.185/sharename

# Check SMB vulnerabilities:
nmap --script=smb-check-vulns.nse <targetip> -p445

# basic nmap scripts to enumerate shares and OS discovery
nmap -p 139,445 192.168.1.1/24 --script smb-enum-shares.nse smb-os-discovery.nse

# Connect using Username
rsmbclient -L <targetip> -U username -p 445

# Connect to Shares
smbclient \\\\<targetip>\\ShareName
smbclient \\\\<targetip>\\ShareName -U john

# enumarete with smb-shares, -a “do everything” option
enum4linux -a 192.168.1.120

# learn the machine name and then enumerate with smbclient
nmblookup -A 192.168.1.102
smbclient -L <server_name> -I 192.168.1.105

# rpcclient - Connect with a null-session (only works for older windows servers) if RPC 135/tcp is open then:
rpcclient -U james 10.10.10.52
rpcclient -U "" 192.168.1.105
rpcclient -U '' -N 172.21.0.185
(press enter if asks for a password)
rpcclient $> srvinfo
rpcclient $> enumdomusers
rpcclient $> enumalsgroups domain
rpcclient $> lookupnames administrators
rpcclient> querydominfo
rpcclient> enumdomusers
rpcclient> queryuser john
 - query user 0x451
 - querygroup 0x234
 - querygroupmem 0x323


polenum -u '' -p '' x.x.x.x 


# scan for vulnerabilities with nmap
nmap --script "vuln" <targetip> -p139,445

Shares check:
smbmap -H 172.21.0.185
smbmap -H ip -u anonymous -R
smbmap -d domain.local -u someuser -p somepassword -H 172.21.0.185 - try to put your password in '' as the password has ! and can break the command parser

------------------------

crackmapexec smb --pass-pol x.x.x.z
crackmapexec smb x.x.x.x --pass-pol -u '' -p ''
crackmapexec smb x.x.x.x -u someuser -p somepassword --shares
crackmapexec smb x.x.x.x -u users.txt -p somepassword -   this command wil take all users from files users.txt and try to login with somepassword
crackmapexec smb x.x.x.x/24 -u 'userzz' -H HASHlaskhdsalhdlsahdlsadh134312!hash --local-auth
crackmapexec smb ip -u 'guest' -p '' -M spider_plus after to parse the json type cat /tmp/cme_spuder_plus/ip.json |jq '. |map_values(keys)'

------------------------

HTTP

nmap --script http-methods --script-arg http-methods.url-path=/lala_folder/ target_ip

-------------------------

DNS

In case we have ADS port 53 we try:
dnsrecon -d ip_addr -t axfr
or
use auziliary/gather/enum_dns

-------------------------

SMTP

# telnet or netcat connection
nc <targetip> 25
VRFY root
# Check for commands
nmap -script smtp-commands.nse <targetip>

------------------------

Port 111 - RPC

Rpcbind can help us look for NFS-shares. So look out for nfs. Obtain list of services running with RPC:

rpcbind -p <targetip>
rpcinfo –p x.x.x.x

# using nmap, see which port NFS is listening
locate *rpc*.nse
nmap --script rpcinfo.nse <targetip> -p 111

-------------------------

NFS

# to find the public share
locate *nfs*.nse
nmap --script nfs-showmount.nse <targetip>

# mount the share to a folder under /tmp
mkdir /tmp/nfs
/sbin/mount.nfs <targetip>:/home/box /tmp/nfs

------------------------------------------------------

LDAP + Kerbrute

kerbrute userenum -d domain.local --dc ip users.txt - 
 
ldapsearch -H ldap://x.x.x.x -x -s base namingcontexts 
ldapsearch -h x.x.x.x -x
ldapsearch -h x.x.x.x -x -s base namingcontexts - the output of this compand will be "DC=domain,DC=local"
ldapsearch -h x.x.x.x -x -b "DC=domain,DC=local" > ldap.txt
ldapsearch -h x.x.x.x -x -b "DC=domain,DC=local" '(objectClass=Person)' sAMAccountName
ldapsearch -h x.x.x.x -x -b "DC=domain,DC=local" '(objectClass=Person)' "sAMAccountName" | grep sAMAccountName

---------------------------------------------------------------------------------------------------------------






